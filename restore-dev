#!/bin/bash

# Backup Odoo Server to S3
#
# Requirements:
# - sudo apt-install p7zip-full
# - pip install awscli --upgrade --user
#
# Install:
# - aws configure
# - git clone <repo-url>
# - vim ~/.bkodoorc (add the following vars)
#
#    SERVER_NAME='odoogap-www-server'
#    DB_NAME='database1'
#    DATA_FOLDER='/opt/odoo/data'
#
# Usage:
# > ./back
#
# Crontab:
# crontab -e (add the following)
# 0 10 * * * /home/ogap/.backup/back >/dev/null 2>&1
#
# Author:
# Diogo Duarte <dduarte@odoogap.com>

if [ -e server.conf ]; then
	echo "Reading local config server.conf" >&2
    source server.conf
fi
if [ -e ~/.bkodoorc ]; then
	echo "Reading user config ~/.bkodoorc" >&2
    source ~/.bkodoorc
fi


now=`date +"%m_%d_%Y"`
FOLDER_BACK="backup_${SERVER_NAME}_${now}"

function err() {
	echo "$0: $*" >&2
	exit 1
}

die_help() {
	if [ "$*" ]; then
		echo "$*" >&2
		echo "" >&2
	fi
   echo "restore-dev command

   restore-dev ls {s3-folder}

" >&2
	exit 1
}

function checkdependencies() {
	P7ZIP=$(which 7z)
	[ "$P7ZIP" ] || err "p7zip-full not found, please install p7zip-full"
	AWS=$(which aws)
	[ "$AWS" ] || err "aws cli not found, please install awscli"
}

function checkinput() {
	[ "$SERVER_NAME" ]    || err "SERVER_NAME not specified"
	[ "$DATA_FOLDER" ]    || err "DATA_FOLDER not specified"
}

while getopts ":h" opt; do
  case ${opt} in
    h )
      		die_help
      ;;
    \? )
		    echo "Invalid Option: -$OPTARG" 1>&2
		    exit 1
      ;;
  esac
done
shift $((OPTIND -1))

subcommand=$1; shift  
case "$subcommand" in
  # Parse options to the install sub command
  ls)
    s3-folder=$1; shift  # Remove 'install' from the argument list

    # Process package options
    while getopts ":t:" s3-folder; do
      case ${s3-folder} in
        : )
          echo "Invalid Option: -$OPTARG requires an argument" 1>&2
          exit 1
          ;;
      esac
    done
    shift $((OPTIND -1))
    ;;
esac

echo "Subcommand $subcommand"

checkdependencies
checkinput

aws s3 ls



exit $?
